
<launch>

  <!-- Choose visualization -->
  <arg name="rviz" default="true" />
  <arg name="rtabmapviz" default="false" /> 
  <arg name="move_base" default="true" /> 

  <param name="use_sim_time" type="bool" value="false"/>
  
  <!-- Localization-only mode -->
  <arg name="localization"      default="true"/>
  <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>
  <arg name="database_path" default="~/.ros/rtabmap.db"/>


  <group ns="rtabmap">
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
      <param name="frame_id"           type="string" value="base_footprint"/>
      <param name="wait_for_transform" type="bool" value="true"/>
    
      <param name="subscribe_depth" type="bool" value="true"/>
      <param name="subscribe_scan"  type="bool" value="true"/>
  
      <remap from="odom"            to="odom"/>
      <remap from="scan"            to="/scan"/>
      <remap from="rgb/image"       to="/camera/color/image_raw_sync"/>
      <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw_sync"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info_sync"/>

        <!-- use actionlib to send goals to move_base --> 
      <param name="use_action_for_goal" type="bool" value="true"/>
      <remap from="move_base"            to="/planner/move_base"/>  
      <!-- <remap from="goal_out"             to="move_base_simple/goal"/>	 -->
  
      <remap from="mapData" to="mapData"/>
      <remap from="grid_map" to="/map"/>

      <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
      <param name="database_path"       type="string" value="$(arg database_path)"/>
      <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>  <!-- Do odometry correction with consecutive laser scans -->
      <param name="RGBD/ProximityBySpace"     type="string" value="true"/>  <!-- Local loop closure detection (using estimated position) with locations in WM -->
      <param name="RGBD/ProximityByTime"      type="string" value="false"/> <!-- Local loop closure detection with locations in STM -->
      <param name="RGBD/ProximityPathMaxNeighbors" type="string" value="10"/> <!-- Do also proximity detection by space by merging close scans together. -->
      <param name="Reg/Strategy"              type="string" value="1"/>     <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->
      <param name="Vis/MinInliers"        type="string" value="12"/>   <!-- 3D visual words correspondence distance -->
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/> <!-- Optimize graph from initial node so /map -> /odom transform will be generated -->
      <param name="RGBD/OptimizeMaxError"     type="string" value="4"/>	    <!-- Reject any loop closure causing large errors (>3x link's covariance) in the map -->
      <param name="Reg/Force3DoF"             type="string" value="true"/>  <!-- 2D SLAM -->
      <param name="Grid/FromDepth"            type="string" value="true"/> <!-- Create 2D occupancy grid from laser scan -->
      <param name="Mem/STMSize"               type="string" value="30"/>    <!-- increased to 30 to avoid adding too many loop closures on just seen locations -->
      <param name="RGBD/LocalRadius"          type="string" value="5"/>     <!-- limit length of proximity detections -->
      <param name="Icp/CorrespondenceRatio"   type="string" value="0.2"/>   <!-- minimum scan overlap to accept loop closure -->
      <param name="Icp/PM"                    type="string" value="false"/>
      <param name="Icp/PointToPlane"          type="string" value="false"/>
      <param name="Icp/MaxCorrespondenceDistance"  type="string" value="0.15"/>
      <param name="Icp/VoxelSize"             type="string" value="0.05"/>
      
      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
    </node>
    
    <!-- Visualisation RTAB-Map -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
  	  <param name="subscribe_depth"    type="bool" value="true"/>
      <param name="subscribe_scan"     type="bool" value="true"/>
      <param name="frame_id"           type="string" value="base_footprint"/>
      <param name="wait_for_transform" type="bool" value="true"/>
    
      <remap from="rgb/image"       to="/camera/color/image_raw_sync"/>
      <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw_sync"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info_sync"/>
      <remap from="scan"            to="/scan"/>
      <remap from="odom"            to="odom"/>
    </node>
  </group>
  
  <!-- Visualisation RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_ros)/launch/mango/config/mango_navigation.rviz" output="screen"/>

  <!-- move base -->
  <include if="$(arg move_base)" file="$(find rtabmap_ros)/launch/mango/mango_move_base.launch"/>

  <!-- obstacle cloud -->
  <include file="$(find rtabmap_ros)/launch/mango/find_obstacle.launch"/>


</launch>
